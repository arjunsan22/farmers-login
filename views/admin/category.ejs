<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Category Management</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- SweetAlert2 CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css">
  <!-- SweetAlert2 JS -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <style>
    /* Sidebar Styles */
    .sidebar {
      height: 100vh;
      width: 270px;
      background-color: #f8f9fa;
      position: fixed;
      top: 0;
      left: 0;
      padding: 20px;
      overflow-y: auto;
      transition: all 0.3s ease;
      z-index: 1000;
    }

    .sidebar h4 {
      text-align: center;
    }

    .sidebar ul {
      padding: 0;
    }

    .sidebar .nav-link {
      font-size: 16px;
      margin-bottom: 10px;
      transition: all 0.2s ease;
    }

    /* Content area adjustment */
    .content-main {
      margin-left: 260px;
      padding: 20px;
      transition: margin-left 0.3s ease;
    }

    /* Responsive Sidebar */
    @media (max-width: 991px) {
      .sidebar {
        width: 200px;
      }
      .content-main {
        margin-left: 260px;
      }
    }

    @media (max-width: 768px) {
      .sidebar {
        width: 100%;
        height: auto;
        position: relative;
      }
      .content-main {
        margin-left: 0;
      }
      .table-responsive {
        overflow-x: auto;
      }
    }

    /* Table styling */
    .thead-dark th {
      background-color: #343a40;
      color: #fff;
      text-align: center;
      white-space: nowrap;
    }

    .table-hover tbody tr:hover {
      background-color: #f1f1f1;
    }

    /* Card and form responsiveness */
    .card {
      margin-bottom: 20px;
    }

    /* Search bar responsiveness */
    .input-group {
      max-width: 100%;
      margin: 0 auto;
    }

    @media (min-width: 576px) {
      .input-group {
        max-width: 500px;
      }
    }

    /* Button responsiveness */
    .btn {
      white-space: nowrap;
    }

    /* Pagination responsiveness */
    .pagination-container {
      overflow-x: auto;
      padding: 10px 0;
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <%- include("../../views/admin/adminpartials/sidebar") %>

  <section class="content-main">
    <div class="content-header">
      <h2 class="text-center mb-4" style="color:#182418; font-family: 'Poppins', sans-serif; font-size: 2.5rem; font-weight: 700; text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3); letter-spacing: 2px;">
        CATEGORY
      </h2>  

      <!-- Breadcrumb -->
      <div class="container">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/admin">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Category</li>
          </ol>
        </nav>
      </div>
    </div>

    <!-- Search Bar -->
    <header class="card-header text-center mb-3">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group border border-1 border-grey rounded-pill mx-auto">
          <input type="text" class="form-control border-0 rounded-start" placeholder="Search categories" name="search" />
          <button class="btn btn-outline-secondary rounded-end" type="submit">Search</button>
        </div>
      </form>
    </header>

    <!-- Main Card Section -->
    <div class="card">
      <div class="card-body">
        <div class="row g-4">
          <!-- Form Section -->
          <div class="col-lg-3 col-md-4 col-sm-12">
            <form onsubmit="return handleFormSubmit(event)" action="/admin/addCategory" method="POST" class="mb-4 mb-lg-0">
              <div class="mb-4">
                <label for="name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="name" required />
                <div id="name-error" class="error-message text-danger"></div>
                <label for="description" class="form-label mt-3">Description</label>
                <input type="text" name="description" placeholder="Type here" class="form-control" id="description" required />
                <div id="description-error" class="error-message text-danger"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>

          <!-- Table Section -->
          <div class="col-lg-9 col-md-8 col-sm-12">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead class="thead-dark">
                  <tr>
                    <th class="text-center" style="width: 50px">#</th>
                    <th style="min-width: 120px">Name</th>
                    <th style="min-width: 200px">Description</th>
                    <th style="min-width: 100px">Offer Price</th>
                    <th style="min-width: 100px">Offer</th>
                    <th style="min-width: 80px">Status</th>
                    <th style="min-width: 100px">List/Unlist</th>
                    <th style="min-width: 80px">Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% cat.reverse().forEach((category, index) => { %>
                  <tr>
                    <td class="text-center"><%= index + 1 %></td>
                    <td class="text-center"><%= category.name %></td>
                    <td><%=category.description%></td>
                    <td><%if(category.categoryOffer){%>
                    <%=category.categoryOffer%>
                    <%}else{%>
                      0%
                      <%}%>
                    </td>
                    <td>
                      <%if(category.categoryOffer===0){%>
                      <button class="btn btn-info btn-sm">
                        <a href="#" class="text-white" onclick="addOffer('<%= category._id %>')">Add Offer</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-warning btn-sm">
                        <a href="#" class="text-white" onclick="removeOffer('<%= category._id %>')">Remove</a>
                      </button>
                      <%}%>
                    </td>
                    <td>
                      <% if (category.isListed) { %>
                      <span class="badge bg-success">Listed</span>
                      <% } else { %>
                      <span class="badge bg-danger">Unlisted</span>
                      <% } %>
                    </td>
                    <td>
                      <% if (category.isListed) { %>
                      <button class="btn btn-danger btn-sm">
                        <a href="/admin/unlistCategory?id=<%= category._id %>" class="text-white">Unlist</a>
                      </button>
                      <% } else { %>
                      <button class="btn btn-success btn-sm">
                        <a href="/admin/listCategory?id=<%= category._id %>" class="text-white">List</a>
                      </button>
                      <% } %>
                    </td>
                    <td>
                      <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info btn-sm text-white">Edit</a>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container d-flex justify-content-center mt-4">
      <nav aria-label="Page navigation">
        <ul class="pagination flex-wrap">
          <% if (currentPage > 1) { %>
            <li class="page-item">
              <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
            </li>
          <% } %>
          
          <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
              <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </li>
          <% } %>
          
          <% if (currentPage < totalPages) { %>
            <li class="page-item">
              <a class="page-link" href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
            </li>
          <% } %>
        </ul>
      </nav>
    </div>
  </section>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Your existing JavaScript code remains unchanged -->
  <script>
    // Your existing JavaScript code here (unchanged)
  </script>
</body>
</html>


<script>

    function handleFormSubmit(event){

        event.preventDefault();

        if(!validateForm()){
            return;

        }
        const name=document.getElementById('name').value;
            const description=document.getElementById('description').value;
        fetch('/admin/addCategory',{
            method:'POST',
            headers:{
                'content-type':'application/json'
            },
            body:JSON.stringify({name,description}),

        }).then((response)=>{
            if(!response.ok){
                return response.json().then((err)=>{
                    throw new Error(err.error);
                })
            }
            return response.json();
        })
.then((data)=>{
  Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Category Added Successfully',
            }).then(() => {
                location.reload();
            });
}).catch((error)=>{
    if(error.message==="Category Already Exists"){
        Swal.fire({
            icon:"error",
            title:"Ooops ",
            text:"Category Already Exists"
        })
    }else{
        Swal.fire({
            icon:"error",
            title:"Ooops ",
            text:"An Error Occured On Adding Category"
        })
    }
})

    }

    function validateForm(){
        clearErrorMessages();
        const name=document.getElementsByName('name')[0].value.trim();
        const description=document.getElementsByName('description')[0].value.trim(); 
        isValid=true;

        if(name===""){
            displayErrorMessage('name-error','PLEASE ENTER A NAME')
            isValid=false;
        }else if(!/^[a-zA-Z\s]+$/.test(name)){

            displayErrorMessage('name-error','Category Names Should Only Contain Alphabetics Characters')
            isValid=false;
        }

        if (description === "") {
        displayErrorMessage('description-error', 'PLEASE ENTER A DESCRIPTION');
        isValid = false;
    } else if (description.length < 10) {
        displayErrorMessage('description-error', 'Description Should Be At Least 10 Characters Long');
        isValid = false;
    } else if (description.length > 500) {
        displayErrorMessage('description-error', 'Description Should Not Exceed 500 Characters');
        isValid = false;
    }

        return isValid;
     
    }

function displayErrorMessage(elementId,message){
    var errorElement=document.getElementById(elementId);
    errorElement.innerText=message;
    errorElement.style.display='block';

}

function clearErrorMessages(){

    const errorElements=document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach((element)=>{
        element.innerText="";
        element.style.display="none";
        
    })
}

async function addOffer(categoryId) {
  const {value:amount}=await Swal.fire({

    title:"Offer in Persentage",
    input:"number",
    inputLabel:"Percentage",
    inputPlaceholder:"%"
  })
  if(amount){
    try {
      const response=await fetch('/admin/addCategoryOffer',{

        method:"POST",
        headers:{
          'Content-Type': 'application/json'

        },
        body:JSON.stringify({
          percentage:amount,
          categoryId:categoryId,
        })
      })

      const data= await response.json();
        if(response.ok && data.status==true){
          Swal.fire(
            "Offer added",
            "The offer has been added",
           "Success",
          
          ).then(()=>{
            location.reload();
          })
        }else{
          Swal.fire("Failed",data.message || "Adding offer failed","error")
        }

    } catch (error) {
       Swal.fire(
        "Error",
        "An error occured while adding the offer ",
        "error"
       )
       console.log("Error adding offer ",error)
    }
  }
}
 

async function removeOffer(categoryId) {

  try {
 
    const response = await fetch("/admin/removeCategoryOffer",{
      method:"POST",
      headers:{
        'content-type':'application/json'
      },
      body:JSON.stringify({
        categoryId:categoryId,
      })
    })

    const data =await response.json();
    if(response.ok && data.status === true){
      Swal.fire(
        "Offer removed",
        "The offer hasss been removed",
        "Success"
      ).then(()=>{
        location.reload();

      })
    
    }
    else{
      Swal.fire("Failed",data.message || "Removing offer failed","error" )
    }
  } catch (error) {
    Swal.file(
      "Error",
      "An error boccured while removing offer ",
      "error"
    );
    console.error("Error removing offer",error)
  }
}



</script>
</html>
