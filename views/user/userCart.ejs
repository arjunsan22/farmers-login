<%- include('../../views/partials/user/header') %>
<style>
    .body{
font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    }
    .cart-container {
    background-color: #8d8787;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    height: 602px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    animation: floatEffect 3s ease-in-out infinite;
}

.cart-container:hover {
    transform: scale(1.05); /* Slightly enlarge on hover */
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* Add a deeper shadow effect */
}
    .cart-item {
        background-color: #fff;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    .cart-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }
    .product-image {
        width: 100%;
        height: auto;
        max-height: 100px;
        object-fit: cover;
        border-radius: 8px;
    }
    .quantity-controls {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        border-radius: 20px;
        padding: 5px;
    }
    .quantity-btn {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: none;
        background-color: #007bff;
        color: white;
        font-weight: bold;
        transition: all 0.2s ease;
    }
    .quantity-btn:hover {
        background-color: #0056b3;
    }
    .remove-btn {
        border-radius: 50%;
        width: 35px;
        height: 35px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }
    .remove-btn:hover {
        background-color: #dc3545;
        color: white;
    }
    .empty-cart {
        padding: 40px 20px;
        text-align: center;
    }
    .empty-cart i {
        color: #dee2e6;
        margin-bottom: 20px;
    }
    .checkout-card {
    position: sticky;
    top: 20px;
    border-radius: 15px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    background-color: #ffffff; /* Add a nice background */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    animation: breathingEffect 3s ease-in-out infinite;
    padding: 20px;
    z-index: 100; /* Ensure it stays above other content */
}

/* Hover Effect */
.checkout-card:hover {
    transform: scale(1.03); /* Slightly enlarge */
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2); /* Deeper shadow on hover */
}

/* Breathing Animation */
@keyframes breathingEffect {
    0%, 100% {
        transform: scale(1); /* Original size */
    }
    50% {
        transform: scale(1.02); /* Slightly enlarged during the animation */
    }
}
    .checkout-btn {
        border-radius: 8px;
        padding: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
    }
    .checkout-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,123,255,0.3);
    }
    @media (max-width: 768px) {
        .cart-item {
            padding: 10px;
        }
        .product-image {
            height: 80px;
            margin-bottom: 10px;
        }
        .quantity-controls {
            margin: 10px 0;
        }
    }
</style>
<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="cart-container">
                <h3 style="color: #fff;" class="mb-4 text-center">ùñ∏ùóàùóéùóã ùñ≤ùóÅùóàùóâùóâùóÇùóáùóÄ ùñ¢ùñ∫ùóãùóç</h3>
                <% if (cartItems && cartItems.length > 0) { %>
                    <div class="cart-items">
                        <% cartItems.forEach(item => { %>
                            <div class="cart-item" style="padding: 15px; margin-bottom: 15px; border: 1px solid #e0e0e0; border-radius: 10px; background-color: #fff; box-shadow: 0 2px 5px rgba(0,0,0,0.1);">
                                <div class="row align-items-center">
                                    <div class="col-md-2 col-sm-3">
                                        <img src="/uploads/product-images/<%= item.productImage[0] %>" class="product-image" alt="<%= item.productname %>" style="width: 100%; height: auto; max-height: 100px; object-fit: cover; border-radius: 8px;">
                                    </div>
                                    <div class="col-md-6 col-sm-9">
                                        <h5 class="mb-1"><%= item.productname %></h5>
                                        <p class="text-muted mb-0">‚Çπ<%= item.salePrice.toLocaleString() %></p>
                                        <br>
                                        <p id="status-<%= item.product._id %>" class="text-danger" style="font-weight: bold;"></p> <!-- This will show the stock status -->
                                    </div>
                                    <div class="col-md-3 col-sm-6">
                                        <div class="quantity-controls" style="display: flex; align-items: center; justify-content: center;">
                                            <button class="quantity-btn" onclick="return updateQuantity('<%= item.product._id %>', 'decrease')" style="width: 30px; height: 30px; border-radius: 50%; border: none; background-color: #007bff; color: white; font-weight: bold;">-</button>
                                            <span class="mx-3 fw-bold">
                                                <span id="quantity-<%= item.product._id %>"><%= item.quantity %></span> KG
                                            </span>
                                            <button class="quantity-btn" onclick="return updateQuantity('<%= item.product._id %>', 'increase')" style="width: 30px; height: 30px; border-radius: 50%; border: none; background-color: #007bff; color: white; font-weight: bold;">+</button>
                                        </div>
                                    </div>
                                    <div class="col-md-1 col-sm-2">
                                        <button class="btn btn-outline-danger remove-btn" onclick="confirmRemoveFromCart('<%= item.product._id %>')" style="border-radius: 50%; width: 35px; height: 35px;">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="empty-cart text-center">
                        <i class="fas fa-shopping-cart fa-4x mb-4"></i>
                        <h4 class="mb-3">Your cart is empty</h4>
                        <p class="text-muted mb-4">Looks like you haven't added anything to your cart yet.</p>
                        <a href="/shop" class="btn btn-warning btn-lg checkout-btn">Start Shopping</a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>
        <div class="row justify-content-center">
        <% if (cartItems && cartItems.length > 0) { %>
            <div class="col-lg-4 col-md-10 mt-4 mt-lg-0">
                <div class="checkout-card card">
                   
                    <div class="card-header bg-white py-3">
                        <h4 class="mb-0">Order Summary</h4>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <span class="text-muted">Subtotal</span>
                            <span class="fw-bold">‚Çπ<%= cartTotal.toLocaleString() %></span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-4">
                            <span class="fw-bold">Total</span>
                            <span class="fw-bold fs-5">‚Çπ<%= cartTotal.toLocaleString() %></span>
                   
                        </div>
                        <div>    
                            <form action="/checkout" method="GET">

                            <button class="btn btn-danger checkout-btn w-100" 
                            onclick="proceedToCheckout('<%= JSON.stringify(cartItems.map(item => ({ productId: item.product._id, quantity: item.quantity }))) %>')">
                            Proceed to Checkout
                        </button>
                   </form>
                    </div>
                    
                </div>
                   
                </div>
            </div>
        <% } %>
    </div>
</div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
<script>
   //updating cart//
    async function updateQuantity(productId, action) {
    const decreaseBtn = document.querySelector(`button[onclick="return updateQuantity('${productId}', 'decrease')"]`);
    const increaseBtn = document.querySelector(`button[onclick="return updateQuantity('${productId}', 'increase')"]`);

    decreaseBtn.disabled = true;
    increaseBtn.disabled = true;

    try {
        const response = await fetch('/updateQuantity', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId, action }),
        });
        const data = await response.json();

        if (response.ok) {
            document.getElementById(`quantity-${productId}`).textContent = data.cartItem.quantity;
          
            document.getElementById('cart-total').textContent = `‚Çπ${data.cartTotal.toLocaleString()}`;

            // Check if the quantity exceeds stock after the update
            if (data.cartItem.quantity >= data.cartItem.product.quantity) {
                document.getElementById(`status-${productId}`).textContent = "Out of Stock";
                document.getElementById(`status-${productId}`).style.color = "red";
            } else {
                document.getElementById(`status-${productId}`).textContent = "";
            }
        } else {
            console.log("message:", data.message);
            if (data.message === 'Out of Stock') {
                document.getElementById(`status-${productId}`).textContent = "Out of Stock";
                document.getElementById(`status-${productId}`).style.color = "red";
            }
        }
    } catch (error) {
        console.error('Error updating quantity:', error);
    } finally {
        decreaseBtn.disabled = false;
        increaseBtn.disabled = false;
    }
}

//remove products from cart //

function confirmRemoveFromCart(productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    removeFromCart(productId);
                }
            });
        }

        // Function to remove product from cart
        async function removeFromCart(productId) {
            try {
                const response = await fetch('/removeFromCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId }),
                });
                const data = await response.json();

                if (response.ok) {
                    Swal.fire(
                        'Removed!',
                        data.message,
                        'success'
                    )
                    .then((result) => {
          if (result.isConfirmed) {
            window.location.reload();

          }
        }) // Reload the cart to reflect changes
                } else {
                    console.error("Error:", data.message);
                    Swal.fire(
                        'Error!',
                        data.message,
                        'error'
                    );
                }
            } catch (error) {
                console.error('Error removing product:', error);
                Swal.fire(
                    'Error!',
                    'An error occurred. Please try again later.',
                    'error'
                );
            }
        }


//proceed to checkout//

function proceedToCheckout(productId, quantity) {

    const statusElement = document.getElementById(`status-${productId}`);
    if (statusElement && statusElement.textContent === "Out of Stock") {
        alert("This product is out of stock. Please adjust your cart.");
        window.location.href = '/cart';
        return;
   
    }
    

    
    window.location.href = `/checkout?productId=${productId}&quantity=${quantity}`;

}
   </script>
<%- include('../../views/partials/user/footer') %>

