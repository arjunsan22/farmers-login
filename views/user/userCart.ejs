<%- include('../../views/partials/user/header') %>
<style>
    .cart-container {
        background-color: #f8f9fa;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }
    .cart-item {
        background-color: #fff;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    .cart-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }
    .product-image {
        width: 100%;
        height: auto;
        max-height: 100px;
        object-fit: cover;
        border-radius: 8px;
    }
    .quantity-controls {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        border-radius: 20px;
        padding: 5px;
    }
    .quantity-btn {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: none;
        background-color: #007bff;
        color: white;
        font-weight: bold;
        transition: all 0.2s ease;
    }
    .quantity-btn:hover {
        background-color: #0056b3;
    }
    .remove-btn {
        border-radius: 50%;
        width: 35px;
        height: 35px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }
    .remove-btn:hover {
        background-color: #dc3545;
        color: white;
    }
    .empty-cart {
        padding: 40px 20px;
        text-align: center;
    }
    .empty-cart i {
        color: #dee2e6;
        margin-bottom: 20px;
    }
    .checkout-card {
        position: sticky;
        top: 20px;
        border-radius: 15px;
        box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
    .checkout-btn {
        border-radius: 25px;
        padding: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
    }
    .checkout-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,123,255,0.3);
    }
    @media (max-width: 768px) {
        .cart-item {
            padding: 10px;
        }
        .product-image {
            height: 80px;
            margin-bottom: 10px;
        }
        .quantity-controls {
            margin: 10px 0;
        }
    }
</style>
<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <div class="cart-container">
                <h3 class="mb-4 text-center">Your Shopping Cart</h3>
                <% if (cartItems && cartItems.length > 0) { %>
                    <div class="cart-items">
                        <% cartItems.forEach(item => { %>
                            <div class="cart-item" style="padding: 15px; margin-bottom: 15px; border: 1px solid #e0e0e0; border-radius: 10px; background-color: #fff; box-shadow: 0 2px 5px rgba(0,0,0,0.1);">
                                <div class="row align-items-center">
                                    <div class="col-md-2 col-sm-3">
                                        <img src="/uploads/product-images/<%= item.productImage[0] %>" class="product-image" alt="<%= item.productname %>" style="width: 100%; height: auto; max-height: 100px; object-fit: cover; border-radius: 8px;">
                                    </div>
                                    <div class="col-md-6 col-sm-9">
                                        <h5 class="mb-1"><%= item.productname %></h5>
                                        <p class="text-muted mb-0">₹<%= item.salePrice.toLocaleString() %></p>
                                        <br>
                                        <p id="status-<%= item.product._id %>" class="text-danger" style="font-weight: bold;"></p> <!-- This will show the stock status -->
                                    </div>
                                    <div class="col-md-3 col-sm-6">
                                        <div class="quantity-controls" style="display: flex; align-items: center; justify-content: center;">
                                            <button class="quantity-btn" onclick="return updateQuantity('<%= item.product._id %>', 'decrease')" style="width: 30px; height: 30px; border-radius: 50%; border: none; background-color: #007bff; color: white; font-weight: bold;">-</button>
                                            <span class="mx-3 fw-bold">
                                                <span id="quantity-<%= item.product._id %>"><%= item.quantity %></span> KG
                                            </span>
                                            <button class="quantity-btn" onclick="return updateQuantity('<%= item.product._id %>', 'increase')" style="width: 30px; height: 30px; border-radius: 50%; border: none; background-color: #007bff; color: white; font-weight: bold;">+</button>
                                        </div>
                                    </div>
                                    <div class="col-md-1 col-sm-2">
                                        <button class="btn btn-outline-danger remove-btn" onclick="removeFromCart('<%= item.product._id %>')" style="border-radius: 50%; width: 35px; height: 35px;">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="empty-cart text-center">
                        <i class="fas fa-shopping-cart fa-4x mb-4"></i>
                        <h4 class="mb-3">Your cart is empty</h4>
                        <p class="text-muted mb-4">Looks like you haven't added anything to your cart yet.</p>
                        <a href="/shop" class="btn btn-primary btn-lg checkout-btn">Start Shopping</a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>
        <div class="row justify-content-center">
        <% if (cartItems && cartItems.length > 0) { %>
            <div class="col-lg-4 col-md-10 mt-4 mt-lg-0">
                <div class="checkout-card card">
                    <% cartItems.forEach(item => { %>
                    <div class="card-header bg-white py-3">
                        <h4 class="mb-0">Order Summary</h4>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <span class="text-muted">Subtotal</span>
                            <span class="fw-bold">₹<%= cartTotal.toLocaleString() %></span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-4">
                            <span class="fw-bold">Total</span>
                            <span class="fw-bold fs-5">₹<%= cartTotal.toLocaleString() %></span>
                        </div>
                        <button class="btn btn-primary checkout-btn w-100" 
                        onclick="proceedToCheckout('<%= item.product._id %>', '<%= item.quantity %>')">
                        Proceed to Checkout
                    </button>
                    
                    </div>
                    <% }) %>
                </div>
            </div>
        <% } %>
    </div>
</div>
</div>



<script>
   //updating cart//
    async function updateQuantity(productId, action) {
    const decreaseBtn = document.querySelector(`button[onclick="return updateQuantity('${productId}', 'decrease')"]`);
    const increaseBtn = document.querySelector(`button[onclick="return updateQuantity('${productId}', 'increase')"]`);

    decreaseBtn.disabled = true;
    increaseBtn.disabled = true;

    try {
        const response = await fetch('/updateQuantity', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId, action }),
        });
        const data = await response.json();

        if (response.ok) {
            document.getElementById(`quantity-${productId}`).textContent = data.cartItem.quantity;
            document.getElementById(`grams-${productId}`).textContent = data.cartItem.quantity * 1000;
            document.getElementById('cart-total').textContent = `₹${data.cartTotal.toLocaleString()}`;

            // Check if the quantity exceeds stock after the update
            if (data.cartItem.quantity >= data.cartItem.product.quantity) {
                document.getElementById(`status-${productId}`).textContent = "Out of Stock";
                document.getElementById(`status-${productId}`).style.color = "red";
            } else {
                document.getElementById(`status-${productId}`).textContent = "";
            }
        } else {
            console.log("message:", data.message);
            if (data.message === 'Out of Stock') {
                document.getElementById(`status-${productId}`).textContent = "Out of Stock";
                document.getElementById(`status-${productId}`).style.color = "red";
            }
        }
    } catch (error) {
        console.error('Error updating quantity:', error);
    } finally {
        decreaseBtn.disabled = false;
        increaseBtn.disabled = false;
    }
}

//remove products from cart //


async function removeFromCart(productId) {
    console.log("button triggered");

    try {
        const response = await fetch('/removeFromCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
        });
        const data = await response.json();

        if (response.ok) {
            // Optionally, you can refresh the cart or remove the item from the DOM
            alert(data.message); // Show success message
            window.location.reload(); // Reload the cart to reflect changes
        } else {
            console.error("Error:", data.message);
            alert(data.message); // Show error message
        }
    } catch (error) {
        console.error('Error removing product:', error);
    }
}



//proceed to checkout//
function proceedToCheckout(productId, quantity) {
    const productStock = parseInt(document.getElementById(`status-${productId}`).textContent) || 0; // Assuming you have the stock status in the status element

    if (quantity > productStock) {
        alert("This product is out of stock. Please adjust your cart.");
        window.location.href = '/cart'; // Redirect to the cart page
    } else {
        window.location.href = `/checkout?productId=${productId}&quantity=${quantity}`;
    }
}
   </script>
<%- include('../../views/partials/user/footer') %>

