<%- include("../../views/partials/user/header") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wishlist</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .wishlist-container {
            padding: 2.5rem;
            min-height: 600px;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            margin: 2rem auto;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            color: #2c3e50;
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .page-title::after {
            content: '';
            display: block;
            width: 60px;
            height: 4px;
            background: linear-gradient(90deg, #e74c3c, #c0392b);
            margin: 15px auto;
            border-radius: 2px;
        }

        .wishlist-item {
            border: none;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
            background: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        .wishlist-item:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

        .wishlist-item img {
            height: 250px;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .wishlist-item:hover img {
            transform: scale(1.05);
        }

        .wishlist-item .card-body {
            padding: 1.5rem;
        }

        .wishlist-item .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.75rem;
        }

        .wishlist-item .card-text {
            font-size: 1.1rem;
            color: #34495e;
            margin-bottom: 0.5rem;
        }

        .price {
            font-size: 1.3rem;
            font-weight: 700;
            color: #2ecc71;
        }

        .stock-status {
            font-size: 0.9rem;
            font-weight: 500;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            display: inline-block;
            margin: 0.5rem 0;
        }

        .stock-status.high {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .stock-status.low {
            background-color: #ffebee;
            color: #c62828;
        }

        .btn-remove {
            width: 100%;
            padding: 0.75rem;
            border-radius: 10px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            background: linear-gradient(135deg, #ff4b2b 0%, #ff416c 100%);
            color: white;
            border: none;
            transition: all 0.3s ease;
        }

        .btn-remove:hover {
            background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 75, 43, 0.3);
        }

        .empty-wishlist {
            text-align: center;
            padding: 3rem;
            color: #7f8c8d;
            font-size: 1.2rem;
        }

        .empty-wishlist i {
            font-size: 4rem;
            margin-bottom: 1rem;
            color: #bdc3c7;
        }
       
        .breadcrumb {
    
    padding: 10px 15px;
    border-radius: 0.25rem;
    margin-bottom: 1rem;
}

.breadcrumb-item a {
    color: #007bff;
    text-decoration: none;
}

.breadcrumb-item a:hover {
    color: #0056b3;
}
    </style>
</head>
<body>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
            <li class="breadcrumb-item active" aria-current="page">Wishlist</li>
        </ol>
    </nav>

    <div class="container wishlist-container">
        <h2 class="page-title">My Wishlist</h2>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
       <% if (wishlist && wishlist.products.length > 0) { %>
    <% wishlist.products.forEach(product => { %>
        <div class="col">
            <div class="card wishlist-item h-100">
                <% if (product.productId) { %>
                    <a style="text-decoration: none;" href="/productDetails/<%= product.productId._id %>">
                        <img src="/uploads/product-images/<%= product.productId.productImage[0] %>" class="card-img-top" alt="<%= product.productId.productname %>">
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="card-title"><%= product.productId.productname %></h5>
                                <p class="price">â‚¹ <%= product.productId.salePrice %></p>
                                <% if(product.productId.quantity > 5) { %>
                                    <span class="stock-status high">
                                        <i class="fas fa-check-circle"></i> <%= product.productId.quantity %> <%= product.productId.unit %> in stock
                                    </span>
                                <% } else { %>
                                    <span class="stock-status low">
                                        <i class="fas fa-exclamation-circle"></i> Only <%= product.productId.quantity %> <%= product.productId.unit %> left
                                    </span>
                                <% } %>
                            </div>
                            <button class="btn btn-remove" onclick="removeFromWishlist(event, '<%= product.productId._id %>')">
                                <i class="fas fa-heart-broken"></i> Remove
                            </button>
                        </div>
                    </a>
                    <button class="btn btn-cart btn-warning" id="addToCartButton" onclick="addToCart('<%= product.productId._id %>')">
                        <i class="fas fa-shopping-cart"></i>
                    </button>
                <% } else { %>
                    <div class="card-body">
                        <p class="text-danger">This product is no longer available.</p>
                        <button class="btn btn-remove" onclick="removeFromWishlist(event, '<%= product._id %>')">
                            <i class="fas fa-heart-broken"></i> Remove
                        </button>
                    </div>
                <% } %>
            </div>
        </div>
    <% }) %>
<% } else { %>
    <div class="col-12 empty-wishlist">
        <i class="far fa-heart"></i>
        <p>Your wishlist is empty. Start adding your favorite items!</p>
    </div>
<% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    async function removeFromWishlist(event, productId) {
        event.preventDefault(); // Prevent the default button behavior

        Swal.fire({
            title: 'Removing...',
            text: 'Please wait while we remove the product from your wishlist.',
            icon: 'info',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timerProgressBar: true,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        try {
            const response = await fetch('/wishlist/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });
            const data = await response.json();

            if (response.ok) {
                Swal.fire({
                    title: 'Removed!',
                    text: data.message,
                    icon: 'success',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 1500
                }).then((data) => {
                    
            window.location.reload();

          
                });
            } else {
                console.error("Error:", data.message);
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        } catch (error) {
            console.error('Error removing product:', error);
            Swal.fire({
                title: 'Error!',
                text: 'An error occurred. Please try again later.',
                icon: 'error',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        }
    }
</script>
<script>

 function addToCart(productId) {
        const userId = "<%= user ? user._id : '' %>"; 
        const quantity = 1; // Set default quantity to 1 for wishlist items
        
        if (!userId) {
            Swal.fire({
                title: 'Not Logged In',
                text: 'Please login to add items to cart',
                icon: 'warning',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
            return;
        }

        fetch('/add-to-cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                userId: userId,
                productId: productId,
                quantity: quantity
            })
        })
        .then(response => {
            return response.json().then(data => {
                if (!response.ok) {
                    throw new Error(data.message || 'Network response was not ok');
                }
                return data;
            });
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Product added to cart successfully!',
                    icon: 'success',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to add product to cart: ' + data.message,
                    icon: 'error',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error!',
                text: 'Problem: ' + error.message,
                icon: 'error',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        });
    }
</script>
</body>
</html>

<%- include("../../views/partials/user/footer") %>