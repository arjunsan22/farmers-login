<%- include("../../views/partials/user/header") %>
<style>
    :root {
        --primary-color: #007bff;
        --secondary-color: #6c757d;
        --success-color: #28a745;
        --danger-color: #dc3545;
        --background-color: #f8f9fa;
    }

    .otp-wrapper {
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 20px;
        animation: fadeIn 0.6s ease-out;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @keyframes slideUp {
        from { 
            transform: translateY(30px);
            opacity: 0;
        }
        to { 
            transform: translateY(0);
            opacity: 1;
        }
    }

    .otp-container {
        max-width: 400px;
        width: 100%;
        padding: 40px;
        background: rgba(255, 255, 255, 0.95);
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(31, 38, 135, 0.1);
        backdrop-filter: blur(4px);
        border: 1px solid rgba(255, 255, 255, 0.18);
        animation: slideUp 0.5s ease-out;
        transition: transform 0.3s ease;
    }

    .otp-container:hover {
        transform: translateY(-5px);
    }

    .otp-container h3 {
        font-size: 28px;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 30px;
        text-align: center;
        animation: slideUp 0.6s ease-out;
    }

    .form-group {
        margin-bottom: 25px;
        animation: slideUp 0.7s ease-out;
    }

    .form-group label {
        display: block;
        font-weight: 600;
        color: var(--secondary-color);
        margin-bottom: 10px;
        font-size: 16px;
    }

    .otp-input {
        width: 100%;
        padding: 15px;
        font-size: 20px;
        text-align: center;
        letter-spacing: 5px;
        border-radius: 10px;
        border: 2px solid #e9ecef;
        background: white;
        transition: all 0.3s ease;
        animation: slideUp 0.8s ease-out;
    }

    .otp-input:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
        transform: translateY(-2px);
    }

    .btn-primary {
        width: 100%;
        padding: 12px;
        font-size: 16px;
        font-weight: 600;
        background: linear-gradient(145deg, var(--primary-color), #0056b3);
        border: none;
        border-radius: 10px;
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
        animation: slideUp 0.9s ease-out;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 123, 255, 0.3);
        background: linear-gradient(145deg, #0056b3, var(--primary-color));
    }

    .otp-timer {
        margin-top: 20px;
        font-size: 14px;
        color: var(--secondary-color);
        animation: slideUp 1s ease-out;
    }

    .resend-btn {
        background: none;
        border: none;
        color: var(--primary-color);
        font-size: 14px;
        margin-top: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
        animation: slideUp 1.1s ease-out;
    }

    .resend-btn:not(:disabled):hover {
        color: #0056b3;
        text-decoration: underline;
    }

    .resend-btn:disabled {
        color: var(--secondary-color);
        cursor: not-allowed;
    }

    .alert {
        margin-top: 20px;
        padding: 12px;
        border-radius: 8px;
        animation: shake 0.5s ease-in-out;
    }

    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
    }

    /* Responsive Design */
    @media (max-width: 576px) {
        .otp-wrapper {
            padding: 15px;
        }

        .otp-container {
            padding: 25px;
        }

        .otp-container h3 {
            font-size: 24px;
        }

        .otp-input {
            font-size: 18px;
            padding: 12px;
        }

        .btn-primary {
            padding: 10px;
        }
    }

    /* Success Animation */
    @keyframes successPulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.02); }
        100% { transform: scale(1); }
    }

    .success-animation {
        animation: successPulse 0.5s ease-out;
    }
    .body{
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }
</style>
<div class="otp-wrapper">
   <div class="otp-container">
       <h3>Email Verification</h3>
       <form action="/changePassword-OTP" method="post" onsubmit="return validateOtpForm()">
           <div class="form-group">
               <label for="otp">Enter OTP:</label>
               <input type="text" id="otp" name="otp" class="otp-input" required>
           </div>
           <button type="submit" class="btn btn-primary">Verify OTP</button>
           <div class="otp-timer">
               <span id="otpTimer">OTP Expires in: 1:00</span>
           </div>
           <button class="resend-btn" id="resendOtpButton" type="button" onclick="resendOtp()" disabled>Resend OTP</button>
           <% if (locals.message && message.length > 0) { %>
               <div class="alert alert-danger mt-3">
                   <%= message %>
               </div>
           <% } %>
       </form>
   </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    let otpTimerInterval;
    let timer = 60;

    function startOtpTimer() {
        const timerElement = document.getElementById('otpTimer');
        const resendButton = document.getElementById('resendOtpButton');

        resendButton.disabled = true;
        resendButton.style.cursor = 'not-allowed';

        otpTimerInterval = setInterval(() => {
            const minutes = Math.floor(timer / 60);
            const seconds = timer % 60;
            timerElement.textContent = `OTP Expires in: ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;

            if (--timer < 0) {
                clearInterval(otpTimerInterval);
                timerElement.textContent = 'OTP Expired';
                resendButton.disabled = false;
                resendButton.style.cursor = 'pointer';
            }
        }, 1000);
    }

    function initializeOtpTimer() {
        clearInterval(otpTimerInterval);
        timer = 60;
        startOtpTimer();
    }

    function validateOtpForm() {
        const otpInput = document.getElementById('otp').value;
        $.ajax({
            type: 'POST',
            url: '/changePassword-OTP',
            data: { otp: otpInput },
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Verified Successfully',
                        text: response.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.href = response.redirectUrl;
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid OTP',
                        text: response.message
                    });
                }
            },
            error: function(err) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while verifying OTP. Please try again later.'
                });
            }
        });
        return false;
    }

    function resendOtp() {
        const resendButton = document.getElementById('resendOtpButton');
        if (resendButton.disabled) return;

        clearInterval(otpTimerInterval);
        timer = 60;
        startOtpTimer();
        $.ajax({
            type: 'POST',
            url: '/changePasswordResendbutton-OTP',
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Resent Successfully',
                        text: response.message,
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while resending OTP. Please try again later.'
                    });
                }
            },
            error: function(err) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while resending OTP. Please try again later.'
                });
            }
        });
    }

    initializeOtpTimer();
</script>

<%- include("../../views/partials/user/footer") %>