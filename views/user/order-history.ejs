<%- include("../../views/partials/user/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
   <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order History</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<style>
    .status-badge {
      padding: 8px 16px;
      border-radius: 7px;
      font-size: 0.875rem;
      font-weight: 500;
      text-transform: capitalize;
      display: inline-block;
    }
    .status-pending {
      background-color: #6c757d;
      color: white;
    }
    .status-processing {
      background-color: #17a2b8;
      color: white;
    }
    .status-shipping {
      background-color: #ffc107;
      color: black;
    }
    .status-delivered {
      background-color: #28a745;
      color: white;
    }
    .status-cancelled {
      background-color: #dc3545;
      color: white;
    }
    .status-return-request {
      background-color: #fd7e14;
      color: white;
    }
    .status-returned {
      background-color: #20c997;
      color: white;
    }
  </style>
<body>


  <div class="container my-5">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/userProfile">Profile</a></li>
          <li class="breadcrumb-item active" aria-current="page">Order-History</li>
      </ol>
  </nav>
    <h2 class="text-center text-danger mb-4"><strong> 𝙾𝚁𝙳𝙴𝚁𝚂 𝙷𝙸𝚂𝚃𝙾𝚁𝚈 </strong></h2>
<!-- Navigation Tabs -->
<ul class="nav nav-tabs" id="orderTabs">
  <li class="nav-item">
      <a class="nav-link active" data-bs-toggle="tab" href="#deliveredProducts">Delivered Products</a>
  </li>
  <li class="nav-item">
      <a class="nav-link" data-bs-toggle="tab" href="#returnedProducts">Returned Products</a>
  </li>
</ul>

<!-- Tab Content -->
<div class="tab-content mt-3">
  <!-- Delivered Products Tab -->
  <div class="tab-pane fade show active" id="deliveredProducts">
      <% const deliveredOrders = orders.filter(order => order.Status === 'delivered'); %>
      <% if (deliveredOrders.length > 0) { %>
          <% deliveredOrders.forEach(order => { %>
              <div class="card mb-4">
                  <div class="card-header">
                      <h5 class="text-success">Order ID: <%= order.orderId.slice(-5) %></h5>
                      <p>Order Date: <%= order.createdOn.toDateString() %></p>
                      <p>Status: <span class="status-badge status-delivered"><%= order.Status %></span></p>
                  </div>




                  
                  <div class="card-body">
                      <h6>Ordered Items</h6>
                      <table class="table">
                          <thead>
                              <tr>
                                  <th>Product Name</th>
                                  <th>Quantity</th>
                                  <th>Price</th>
                              </tr>
                          </thead>
                          <tbody>
                              <% order.orderedItems.forEach(item => { %>
                                  <tr>
                                      <td><%= item.product.productname %></td>
                                      <td><%= item.quantity %></td>
                                      <td>₹<%= item.price %></td>
                                  </tr>
                              <% }) %>
                          </tbody>
                      </table>
                  </div>
              </div>
          <% }) %>
      <% } else { %>
          <p class="text-center">No delivered products found.</p>
      <% } %>
  </div>

  <!-- Returned Products Tab -->
  <div class="tab-pane fade" id="returnedProducts">
      <% const returnedOrders = orders.filter(order => order.Status === 'returned'); %>
      <% if (returnedOrders.length > 0) { %>
          <% returnedOrders.forEach(order => { %>
              <div class="card mb-4">
                  <div class="card-header">
                      <h5 class="text-danger">Order ID: <%= order.orderId.slice(-5) %></h5>
                      <p>Order Date: <%= order.createdOn.toDateString() %></p>
                      <p>Status: <span class="status-badge status-returned"><%= order.Status %></span></p>
                  </div>
                  <div class="card-body">
                      <h6>Ordered Items</h6>
                      <table class="table">
                          <thead>
                              <tr>
                                  <th>Product Name</th>
                                  <th>Quantity</th>
                                  <th>Price</th>
                              </tr>
                          </thead>
                          <tbody>
                              <% order.orderedItems.forEach(item => { %>
                                  <tr>
                                      <td><%= item.product.productname %></td>
                                      <td><%= item.quantity %></td>
                                      <td>₹<%= item.price %></td>
                                  </tr>
                              <% }) %>
                          </tbody>
                      </table>
                  </div>
              </div>
          <% }) %>
      <% } else { %>
          <p class="text-center">No returned products found.</p>
      <% } %>
  </div>
</div>

<!-- all products -->
 <hr style="color: #dc3545;">
 <h2 class="text-center text-success mb-4">𝙰𝙻𝙻 𝙾𝚁𝙳𝙴𝚁𝚂</h2>

    <% if (orders.length > 0) { %>
      <% orders.forEach(order => { %>
        <div class="card mb-4">
          <div class="card-header">
            <h5 class="text-success">Order ID: <%= order.orderId.slice(-5) %></h5>
            <p>Order Date: <%= order.createdOn.toDateString() %></p>
            <p>Status: 
              <span class="status-badge 
                <% if (order.Status === 'pending') { %>status-pending<% } %>
                <% if (order.Status === 'processing') { %>status-processing<% } %>
                <% if (order.Status === 'shipping') { %>status-shipping<% } %>
                <% if (order.Status === 'delivered') { %>status-delivered<% } %>
                <% if (order.Status === 'cancelled') { %>status-cancelled<% } %>
                <% if (order.Status === 'return request') { %>status-return-request<% } %>
                <% if (order.Status === 'returned') { %>status-returned<% } %>
                <% if (order.Status === 'payment_pending') { %>status-payment_pending<% } %>">
                
                <% if (order.Status === 'pending') { %><i class="fas fa-clock"></i><% } %>
                <% if (order.Status === 'processing') { %><i class="fas fa-spinner"></i><% } %>
                <% if (order.Status === 'shipping') { %><i class="fas fa-shipping-fast"></i><% } %>
                <% if (order.Status === 'delivered') { %><i class="fas fa-check-circle"></i><% } %>
                <% if (order.Status === 'cancelled') { %><i class="fas fa-times-circle"></i><% } %>
                <% if (order.Status === 'return request') { %><i class="fas fa-undo"></i><% } %>
                <% if (order.Status === 'returned') { %><i class="fas fa-undo-alt"></i><% } %>
                <% if (order.Status === 'payment_pending') { %><i class="fas fa-credit-card"></i><% } %>
                <%= order.Status %>
              </span>
            </p>
            <!-- for payment pending issues -->
<% if (order.Status === 'payment_pending') { %>
  <button class="btn btn-warning" onclick="continuePayment('<%= order._id %>')">Continue Payment</button>
<% } %>
<!-- for oder cancellation -->
            <% if (order.Status === 'pending' || order.Status === 'processing') { %>
              <form action="/orders/cancel/<%= order._id %>" method="POST" class="cancel-order-form d-inline">
                <button type="submit" class="btn btn-danger btn-sm">Cancel Order</button>
              </form>
            <% } %>
            <% 
  // Get today's date (only year, month, day)
  const currentDate = new Date();
  currentDate.setHours(0, 0, 0, 0); // Reset time to midnight

  // Convert delivery date to a Date object and reset time to midnight
  const deliveryDate = new Date(order.deliveryDate);
  deliveryDate.setHours(0, 0, 0, 0); 

  // Check if the difference in days is within 7 days
  const differenceInDays = (currentDate - deliveryDate) / (1000 * 60 * 60 * 24);
  const returnEligible = differenceInDays <= 7; // Only compare days
%>
<!-- invoice download and return order -->
            <% if (order.Status === 'delivered' && returnEligible) { %>

              <button type="button" class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#returnModal-<%=order._id %>">Return Order </button>
              <p class="text-danger">Delivered on <%= deliveryDate.toDateString() %>, return is possible as order is only 7 days</p>
              <a href="/orders/download-invoice/<%= order._id %>" class="btn btn-success btn-sm">
                <i class="fas fa-download"></i> Download Invoice
            </a>
               <!-- Return Modal -->
               <div class="modal fade" id="returnModal-<%= order._id %>" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="returnModalLabel">Return Order</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      <form action="/orders/return/<%= order._id %>" method="POST" class="return-order-form">
                        <div class="mb-3">
                          <label for="returnReason" class="form-label">Reason for Return</label>
                          <textarea class="form-control" id="returnReason" name="returnReason" rows="3" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-warning">Submit Return Request</button>
                      </form>
                    </div>
                  </div>
                </div>
              </div>
         <% }else if(differenceInDays > 7){%>
          <p style="font-family:cursive;" class="text-danger fs-6 fw-bold">Return order expired because it was more than 7 days since delivery, <span class="text-success fs-5 fw-bold"> now <%=differenceInDays%> th day</span></p>
<%}%>
        </div>
          <div class="card-body">

            <h6>Shipping Address</h6>
            <% if (order.address) { %>
              <p><strong>Name:</strong> <%= order.address.name %></p>
              <p><strong>City:</strong> <%= order.address.city %></p>
              <p><strong>Street Mark:</strong> <%= order.address.StreetMark %></p>
              <p><strong>State:</strong> <%= order.address.state %></p>
              <p><strong>Pincode:</strong> <%= order.address.pincode %></p>
              <p><strong>Phone:</strong> <%= order.address.Phone %></p>
              <p><strong>Second Phone:</strong> <%= order.address.SecondPhone %></p>
              <p><strong>House No:</strong> <%= order.address.Houseno %></p>
            <% } else { %>
              <p>Address details not available.</p>
            <% } %>

            <h6>Ordered Items</h6>
            <table class="table">
              <thead>
                <tr>
                  <th>Product Name</th>
                  <th>Quantity</th>
                  <th>Price</th>
                </tr>
              </thead>
              <tbody>
                <% order.orderedItems.forEach(item => { %>
                  <tr>
                    <td><%= item.product.productname %></td>
                    <td><%= item.quantity %></td>
                    <td>₹<%= item.price %></td>
                  </tr>
                <% }) %>
              </tbody>
            </table>

            <h6>Payment Summary</h6>
            <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
            <p><strong>Total Price:</strong> ₹<%= order.totalPrice %></p>
            <p><strong>Discount:</strong> ₹<%= order.discount %></p>
            <p><strong>Final Amount:</strong> ₹<%= order.finalAmount %></p>
          </div>
        </div>
      <% }) %>
    <% } else { %>
      <p class="text-center">You have no orders yet.</p>
    <% } %>
  </div>
  <!-- Pagination Controls -->
  <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mt-4">
        <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </li>
        <% } %>
    </ul>
</nav>
</div>
<body>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
  <script>
    $(document).ready(function() {
      $('.cancel-order-form').on('submit', function(event) {
        event.preventDefault();
        var form = this;
        Swal.fire({
          title: 'Are you sure?',
          text: "You are about to cancel this order.",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'Cancelled!',
            text: 'Your order has been cancelled.',
            icon: 'success',
            iconHtml: '<i class="fas fa-check-circle"></i>',
            confirmButtonColor: '#3085d6'
          }).then(() => {
            form.submit();
          });
        }
      });
    });

    $('.return-order-form').on('submit', function(event) {
        event.preventDefault();
        var form = this;
        Swal.fire({
          title: 'Are you sure?',
          text: "You are about to return this order.",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, return it!'
        }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'Returned!',
            text: 'Your return request has been submitted.',
            icon: 'success',
            iconHtml: '<i class="fas fa-check-circle"></i>',
            confirmButtonColor: '#3085d6'
          }).then(() => {
            form.submit();
          });
        }
      });
    });
  
  });

  
  </script>


    <!-- razorpay integration from order history -->
    <script>
      function continuePayment(orderId) {
          fetch(`/create-razorpay-pending-orders/${orderId}`)
              .then(response => response.json())
              .then(data => {
                  const options = {
                      key: '<%= razorpayKeyId %>', 
                      amount: data.amount,
                      currency: data.currency,
                      name: 'Farmers Login',
                      description: 'Order Payment',
                      order_id: data.orderId,
                      handler: function (response) {
                          // Handle successful payment
                          verifyPayment({
                              razorpay_payment_id: response.razorpay_payment_id,
                              razorpay_order_id: response.razorpay_order_id,
                              razorpay_signature: response.razorpay_signature
                          }, orderId);
                      },
                      prefill: {
                          name: '<%= user && (user.firstName || user.lastname) ? (user.lastName || user.lastname) + " " + (user.firstName || user.firstname) : "Customer" %>',
                          email: '<%= user && user.email ? user.email : "" %>',
                          contact: '<%= user && (user.mobile || user.phone) ? user.mobile || user.phone : "" %>'
                      },

                      theme: {
                          color: '#3399cc'
                      }
                  };
                  const rzp = new Razorpay(options);
                  rzp.on('payment.failed', function (response) {
                      alert('Payment failed. Please try again.');
                  });
                  rzp.open();
              })
              .catch(error => {
                  console.error('Error:', error);
                  alert('Something went wrong! Please try again.');
              });
      }
      
      function verifyPayment(payment, orderId) {
          fetch('/verify-payment-pending-order', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                  payment: payment,
                  order: orderId
              })
          })
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  Swal.fire({
                      title: 'Payment Successful!',
                      text: 'Your order has been confirmed.',
                      icon: 'success',
                      confirmButtonText: 'OK'
                  }).then(() => {
                      window.location.href = '/order-success/' + orderId; 
                  });
              } else {
                  Swal.fire({
                      title: 'Payment Failed',
                      text: 'Please try again or contact support.',
                      icon: 'error',
                      confirmButtonText: 'OK'
                  });
              }
          })
          .catch(error => {
              console.error('Error:', error);
              Swal.fire({
                  title: 'Error',
                  text: 'Payment verification failed. Please contact support.',
                  icon: 'error',
                  confirmButtonText: 'OK'
              });
          });
      }
      </script>
</body>
</html>
<%- include("../../views/partials/user/footer") %>